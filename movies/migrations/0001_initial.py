# Generated by Django 5.2.3 on 2025-08-14 16:22

import django.contrib.postgres.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('alpha_3', models.CharField(max_length=3, unique=True)),
                ('official_languages', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), default=list, size=None)),
            ],
            options={
                'db_table': 'country',
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('tvdb_id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30, unique=True)),
                ('slug', models.SlugField(max_length=30, unique=True)),
            ],
            options={
                'db_table': 'genre',
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('tvdb_id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=255)),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('last_updated', models.CharField(db_comment='Date and time when the movie was last updated from TVDB.')),
                ('poster', models.ImageField(null=True, upload_to='movie_posters/')),
                ('runtime', models.PositiveIntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=20)),
                ('keep_updated', models.BooleanField()),
                ('year', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('imdb_id', models.CharField(max_length=16, null=True)),
                ('tmdb_id', models.PositiveIntegerField(null=True)),
                ('budget', models.PositiveBigIntegerField(null=True)),
                ('box_office', models.PositiveBigIntegerField(null=True)),
                ('language', models.CharField(blank=True, max_length=20)),
                ('language_alpha_3', models.CharField(max_length=3)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='movies.country')),
                ('genres', models.ManyToManyField(to='movies.genre')),
            ],
            options={
                'db_table': 'movie',
            },
        ),
        migrations.CreateModel(
            name='Crew',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('credit_id', models.CharField(blank=True, max_length=255)),
                ('profile_image_path', models.CharField(blank=True, max_length=255)),
                ('department', models.CharField(blank=True, max_length=255)),
                ('job', models.CharField(blank=True, max_length=255)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.movie')),
            ],
            options={
                'db_table': 'crew',
            },
        ),
        migrations.CreateModel(
            name='Cast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('credit_id', models.CharField(blank=True, max_length=255)),
                ('character', models.CharField(blank=True, max_length=255)),
                ('profile_image_path', models.CharField(blank=True, max_length=255)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.movie')),
            ],
            options={
                'db_table': 'cast',
            },
        ),
    ]
